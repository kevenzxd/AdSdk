/*

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'

// 项目引用的版本号，比如compile 'com.yanzhenjie:andserver:1.0.1'中的1.0.1就是这里配置的。
version = "1.0.1"
// 定义两个链接，下面会用到。
def siteUrl = 'hhttps://github.com/kevenzxd/AdSdk'  // 项目主页。
def gitUrl = 'https://github.com/kevenzxd/AdSdk.git'  // Git仓库的url
def issuesUrl = 'https://github.com/kevenzxd/AdSdk/issues'
def localVcsUrl = gitUrl

// 唯一包名，比如compile 'com.yanzhenjie:andserver:1.0.1'中的com.yanzhenjie就是这里配置的。
group = "org.seton.adsdk"

install {
    repositories.mavenInstaller {
        // 生成pom.xml和参数
        pom {
            project {
                packaging 'aar'
                // 项目描述，复制我的话，这里需要修改。
                name 'Mavl AdSdk Unity'// 可选，项目名称。
                description 'Mavl AdSdk Unity Base on Mopub Logic.'// 可选，项目描述。
                url siteUrl // 项目主页，这里是引用上面定义好。

                // 软件开源协议，现在一般都是Apache License2.0吧，复制我的，这里不需要修改。
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                //填写开发者基本信息，复制我的，这里需要修改。
                developers {
                    developer {
                        id 'kevenzxd' // 开发者的id。
                        name 'kevenzxd' // 开发者名字。
                        email 'kevenzxd@gmail.com' // 开发者邮箱。
                    }
                }

                // SCM，复制我的，这里不需要修改。
                scm {
                    connection gitUrl // Git仓库地址。
                    developerConnection gitUrl // Git仓库地址。
                    url siteUrl // 项目主页。
                }

                dependencies {
                    dependency {
                        groupId 'com.chartboost'
                        artifactId 'chartboost-sdk'
                        version '8.2.0'
                        scope 'implementation'
                    }
                }
            }
        }
    }
}

//afterEvaluate {
//    publishing {
//        publications {
//            release(MavenPublication) {
//                from components.release
//                artifact sourcesJar
//
//                groupId = group
//                artifactId = "mavl-adsdk-unity"
//                version = "1.0.1"
//            }
//        }
//    }
//}

// 这里是读取Bintray相关的信息，我们上传项目到github上的时候会把gradle文件传上去，所以不要把帐号密码的信息直接写在这里，写在local.properties中，这里动态读取。
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
//    user = properties.getProperty("bintray.user") // Bintray的用户名。
//    key = properties.getProperty("bintray.apikey") // Bintray刚才保存的ApiKey。

    user = project.hasProperty("bintray.user") ? project.getProperty("bintray.user") : ""
    key = project.hasProperty("bintray.apikey") ? project.getProperty("bintray.apikey") : ""

    configurations = ['archives']
    pkg {
        repo = "mavl-adsdk-unity"  // 上传到maven库。（这里要特别注意，如果写了maven报404错误，请在bintray创建一个仓库，这里填改成你创建的仓库的名字，如何创建请看下图。）
        name = "org.seton.adsdk"  // 发布到Bintray上的项目名字，这里的名字不是compile 'com.yanzhenjie:andserver:1.0.1'中的andserver。
        userOrg = 'kevenzxd' // 使用bintray的登录用户名：kevenzxd。
        websiteUrl = siteUrl
        vcsUrl = localVcsUrl //
        issueTrackerUrl = issuesUrl
        licenses = ["Apache-2.0"]
        publish = true // 是否是公开项目。
    }
}

*/


///**

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

def siteUrl = 'hhttps://github.com/kevenzxd/AdSdk'  // 项目主页。
def gitUrl = 'https://github.com/kevenzxd/AdSdk.git'  // Git仓库的url
def issuesUrl = 'https://github.com/kevenzxd/AdSdk/issues'

def bintrayUserOrg = 'kevenzxd'
def projectPkgName = 'org.seton.adsdk'
def projectName = 'mavl-adsdk-unity'
def projectDesc = 'Mavl AdSdk Unity Base on Mopub Logic.'
def versionName = '2.3.2'

version = versionName
group = projectPkgName

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

artifacts {
    archives sourcesJar
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                artifact sourcesJar

                groupId = projectPkgName
                artifactId = projectName
                version = versionName
            }
        }
    }

    bintray {
        user = project.hasProperty("bintray.user") ? project.getProperty("bintray.user") : ""
        key = project.hasProperty("bintray.apikey") ? project.getProperty("bintray.apikey") : ""
        publications = ['release']
        pkg {
            repo = projectName
            name = projectPkgName
            userOrg = bintrayUserOrg
            vcsUrl = gitUrl
            websiteUrl = siteUrl
            issueTrackerUrl = issuesUrl
            desc = projectDesc
        }
        dryRun = false
        publish = true
    }
}

// */