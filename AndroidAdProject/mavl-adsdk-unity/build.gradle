apply plugin: 'com.android.library'

repositories {
    flatDir {
        dirs './libs'
    }
    // APS, Mopub
    jcenter()

    // Add for chartboost
    maven { url 'https://chartboostmobile.bintray.com/Chartboost' }

    // Add for ironsource
    maven { url 'https://dl.bintray.com/ironsource-mobile/android-sdk'}

    // Add for vungle
    maven { url 'https://jitpack.io' }

    // Add for Fyber
    maven { url "https://fyber.bintray.com/marketplace" }

    // Add for Ogury
    maven { url "https://maven.ogury.co" }

    // Add for Smaato
    maven { url "https://s3.amazonaws.com/smaato-sdk-releases/" }
//    maven { url "https://s3.amazonaws.com/moat-sdk-builds" }
//    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 100
        versionName "1.0.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles "consumer-rules.pro"
    }

    signingConfigs{
        release {
            storeFile file('/Users/xidongzhang/work/mvk/IOS_signed/android/OneConnect.keystore')
            storePassword 'oneconnect'
            keyAlias 'oneconnect'
            keyPassword 'oneconnect'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            jniDebuggable true
        }
        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            java.srcDirs 'src'
//            manifest.srcFile 'AndroidManifest.xml'
            //aidl.srcDirs = ['src']
            //renderscript.srcDirs = ['src']
            assets.srcDirs = ['src/main/assets']
            //jniLibs.srcDirs = ['libs']
            //jniLibs.srcDirs = ['jni']
        }
    }


    libraryVariants.all { variant ->
        variant.outputs.all {
            if (outputFileName != null && outputFileName.endsWith('.aar')) {
                if (variant.buildType.name == "debug") {
                    outputFileName = "mavl-adsdk-unity-debug-${defaultConfig.versionName}-${getBuildId()}.aar"
                } else if (variant.buildType.name == ("release")) {
                    outputFileName = "mavl-adsdk-unity-release-${defaultConfig.versionName}-${getBuildId()}.aar"
                }
            }
        }
    }
}

static def getBuildId() {
    return new Date().format("yyyyMMddHHmm")
}

dependencies {

//    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation fileTree(dir: 'libs', include: ['jackson-jr-all-2.9.8.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.3.0'
//    implementation 'com.fasterxml.jackson.core:jackson-jr-all:2.9.8'
//    implementation(name: 'lifecycle-runtime-2.0.0', ext:'aar')

    // Add for android libs.
//    implementation(name: 'lottie-3.6.0', ext:'aar')
    implementation 'com.airbnb.android:lottie:3.6.0'

    // start:  import by native.

    // Mopub
    implementation('com.mopub:mopub-sdk:5.14.0@aar') {
        transitive = true
    }

    // Admob
    implementation 'com.google.android.gms:play-services-ads:19.7.0'

    // Applovin
    implementation 'com.mopub.mediation:applovin:9.14.8.0'
    implementation 'com.applovin:applovin-sdk:9.15.3'

    // ChartBoost
    implementation 'com.chartboost:chartboost-sdk:8.2.0'
    implementation 'com.mopub.mediation:chartboost:8.2.0.3'

    // FAN
    implementation 'com.mopub.mediation:facebookaudiencenetwork:6.3.0.0'
    implementation 'com.facebook.android:audience-network-sdk:6.3.0'

    // Ironsource
    implementation 'com.mopub.mediation:ironsource:7.0.3.1.0'
    implementation 'com.ironsource.sdk:mediationsdk:7.0.4'

    // UnityAds
    implementation 'com.mopub.mediation:unityads:3.6.0.1'
    implementation 'com.unity3d.ads:unity-ads:3.6.0'

    // Vungle
    implementation 'com.mopub.mediation:vungle:6.8.1.0'
    implementation 'com.vungle:publisher-sdk-android:6.8.1'

    // APS
    implementation 'com.amazon.android:aps-sdk:8.4.3@aar'

    // Fyber
    def vampVersion = "7.8.1"
    implementation "com.fyber.vamp:mopub-custom-events-5.13:${vampVersion}"
    //don't forget to add the SDK itself -
    implementation "com.fyber.vamp:core-sdk:${vampVersion}"
    implementation "com.fyber.vamp:mraid-kit:${vampVersion}"
    implementation "com.fyber.vamp:video-kit:${vampVersion}"


    // Ogury
    implementation 'co.ogury:ogury-sdk:5.0.6'
    // if you are using a MoPub SDK version greater than 5.12.0
    implementation 'co.ogury:ogury-mediation-mopub:5.2.0'

    // Smaato
    implementation 'com.smaato.android.sdk:mopub-banner-adapter-5-13:21.5.7'
    implementation 'com.smaato.android.sdk:mopub-interstitial-adapter-5-13:21.5.7'
    implementation 'com.smaato.android.sdk:mopub-rewarded-video-adapter-5-13:21.5.7'
    implementation 'com.smaato.android.sdk:mopub-native-adapter:21.5.7'

    // Adcolony
    implementation 'com.adcolony:sdk:4.4.1'
    implementation 'com.mopub.mediation:adcolony:4.4.1.0'
    // end:  import by native.
}

apply from: 'publisher.gradle'



