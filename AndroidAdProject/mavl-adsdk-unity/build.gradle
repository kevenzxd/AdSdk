apply plugin: 'com.android.library'
// 这里添加下面两行代码。
apply plugin: 'com.github.dcendents.android-maven'
// apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'


repositories {
    flatDir {
        dirs './libs'
    }
    // APS, Mopub
    jcenter()

    // Add for chartboost
    maven { url 'https://chartboostmobile.bintray.com/Chartboost' }

    // Add for ironsource
    maven { url 'https://dl.bintray.com/ironsource-mobile/android-sdk'}

    // Add for vungle
    maven { url 'https://jitpack.io' }

    // Add for Fyber
    maven { url "https://fyber.bintray.com/marketplace" }

    // Add for Ogury
    maven { url "https://maven.ogury.co" }

    // Add for Smaato
    maven { url "https://s3.amazonaws.com/smaato-sdk-releases/" }
//    maven { url "https://s3.amazonaws.com/moat-sdk-builds" }
//    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 100
        versionName "1.0.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles "consumer-rules.pro"
    }

    signingConfigs {
        release {
            storeFile file('../EasyRing.keystore')
            storePassword 'easyring'
            keyAlias 'easyring'
            keyPassword 'easyring'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            java.srcDirs 'src'
//            manifest.srcFile 'AndroidManifest.xml'
            //aidl.srcDirs = ['src']
            //renderscript.srcDirs = ['src']
            assets.srcDirs = ['src/main/assets']
            //jniLibs.srcDirs = ['libs']
            //jniLibs.srcDirs = ['jni']
        }
    }


    libraryVariants.all { variant ->
        variant.outputs.all {
            if (outputFileName != null && outputFileName.endsWith('.aar')) {
                if (variant.buildType.name == "debug") {
//                    outputFileName = "mavl-adsdk-unity-debug-${defaultConfig.versionName}.aar"
                    outputFileName = "mavl-adsdk-unity-debug-${defaultConfig.versionName}-${getBuildId()}.aar"
                } else if (variant.buildType.name == ("release")) {
//                    outputFileName = "mavl-adsdk-unity-release-${defaultConfig.versionName}.aar"
                    outputFileName = "mavl-adsdk-unity-release-${defaultConfig.versionName}-${getBuildId()}.aar"
                }
            }
        }
    }
}

static def getBuildId() {
    return new Date().format("yyyyMMddHHmm")
}

dependencies {

//    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation fileTree(dir: 'libs', include: ['jackson-jr-all-2.9.8.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.3.0'
//    implementation 'com.fasterxml.jackson.core:jackson-jr-all:2.9.8'
//    implementation(name: 'lifecycle-runtime-2.0.0', ext:'aar')

    // Add for android libs.
//    implementation(name: 'lottie-3.6.0', ext:'aar')
    implementation 'com.airbnb.android:lottie:3.6.0'

    // start:  import by native.

    // Mopub
    implementation('com.mopub:mopub-sdk:5.14.0@aar') {
        transitive = true
    }

    // Admob
    implementation 'com.google.android.gms:play-services-ads:19.7.0'

    // Applovin
    implementation 'com.mopub.mediation:applovin:9.14.8.0'
    implementation 'com.applovin:applovin-sdk:9.15.3'

    // ChartBoost
    implementation 'com.chartboost:chartboost-sdk:8.2.0'
    implementation 'com.mopub.mediation:chartboost:8.2.0.3'

    // FAN
    implementation 'com.mopub.mediation:facebookaudiencenetwork:6.3.0.0'
    implementation 'com.facebook.android:audience-network-sdk:6.3.0'

    // Ironsource
    implementation 'com.mopub.mediation:ironsource:7.0.3.1.0'
    implementation 'com.ironsource.sdk:mediationsdk:7.0.4'

    // UnityAds
    implementation 'com.mopub.mediation:unityads:3.6.0.1'
    implementation 'com.unity3d.ads:unity-ads:3.6.0'

    // Vungle
    implementation 'com.mopub.mediation:vungle:6.8.1.0'
    implementation 'com.vungle:publisher-sdk-android:6.8.1'

    // APS
    implementation 'com.amazon.android:aps-sdk:8.4.3@aar'

    // Fyber
    def vampVersion = "7.8.1"
    implementation "com.fyber.vamp:mopub-custom-events-5.13:${vampVersion}"
    //don't forget to add the SDK itself -
    implementation "com.fyber.vamp:core-sdk:${vampVersion}"
    implementation "com.fyber.vamp:mraid-kit:${vampVersion}"
    implementation "com.fyber.vamp:video-kit:${vampVersion}"


    // Ogury
    implementation 'co.ogury:ogury-sdk:5.0.6'
    // if you are using a MoPub SDK version greater than 5.12.0
    implementation 'co.ogury:ogury-mediation-mopub:5.2.0'

    // Smaato
    implementation 'com.smaato.android.sdk:mopub-banner-adapter-5-13:21.5.7'
    implementation 'com.smaato.android.sdk:mopub-interstitial-adapter-5-13:21.5.7'
    implementation 'com.smaato.android.sdk:mopub-rewarded-video-adapter-5-13:21.5.7'
    implementation 'com.smaato.android.sdk:mopub-native-adapter:21.5.7'

    // end:  import by native.
}



// Add for JCenter

// 项目引用的版本号，比如compile 'com.yanzhenjie:andserver:1.0.1'中的1.0.1就是这里配置的。
version = "1.0.0"
// 定义两个链接，下面会用到。
def siteUrl = 'hhttps://github.com/kevenzxd/AdSdk'  // 项目主页。
def gitUrl = 'https://github.com/kevenzxd/AdSdk.git'  // Git仓库的url
def issuesUrl = 'https://github.com/kevenzxd/AdSdk/issues'
def localVcsUrl = gitUrl

// 唯一包名，比如compile 'com.yanzhenjie:andserver:1.0.1'中的com.yanzhenjie就是这里配置的。
group = "org.seton.adsdk"

install {
    repositories.mavenInstaller {
        // 生成pom.xml和参数
        pom {
            project {
                packaging 'aar'
                // 项目描述，复制我的话，这里需要修改。
                name 'Mavl AdSdk Unity'// 可选，项目名称。
                description 'Mavl AdSdk Unity Base on Mopub Logic.'// 可选，项目描述。
                url siteUrl // 项目主页，这里是引用上面定义好。

                // 软件开源协议，现在一般都是Apache License2.0吧，复制我的，这里不需要修改。
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                //填写开发者基本信息，复制我的，这里需要修改。
                developers {
                    developer {
                        id 'kevenzxd' // 开发者的id。
                        name 'kevenzxd' // 开发者名字。
                        email 'kevenzxd@gmail.com' // 开发者邮箱。
                    }
                }

                // SCM，复制我的，这里不需要修改。
                scm {
                    connection gitUrl // Git仓库地址。
                    developerConnection gitUrl // Git仓库地址。
                    url siteUrl // 项目主页。
                }
            }
        }
    }
}

// 生成jar包的task，不需要修改。
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
    archiveClassifier.set('sources')
}
// 生成jarDoc的task，不需要修改。
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    // destinationDir = file("../javadoc/")
    failOnError false // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
}
// 生成javaDoc的jar，不需要修改。
task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}


// 这里是读取Bintray相关的信息，我们上传项目到github上的时候会把gradle文件传上去，所以不要把帐号密码的信息直接写在这里，写在local.properties中，这里动态读取。
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
//    user = properties.getProperty("bintray.user") // Bintray的用户名。
//    key = properties.getProperty("bintray.apikey") // Bintray刚才保存的ApiKey。

    user = project.hasProperty("bintray.user") ? project.getProperty("bintray.user") : ""
    key = project.hasProperty("bintray.apikey") ? project.getProperty("bintray.apikey") : ""

    configurations = ['archives']
    pkg {
        repo = "mavl-adsdk-unity"  // 上传到maven库。（这里要特别注意，如果写了maven报404错误，请在bintray创建一个仓库，这里填改成你创建的仓库的名字，如何创建请看下图。）
        name = "org.seton.adsdk"  // 发布到Bintray上的项目名字，这里的名字不是compile 'com.yanzhenjie:andserver:1.0.1'中的andserver。
        userOrg = 'kevenzxd' // 组织名称， 不能使用bintray的登录用户名：kevenzxd。
        websiteUrl = siteUrl
        vcsUrl = localVcsUrl //
        issueTrackerUrl = issuesUrl
        licenses = ["Apache-2.0"]
        publish = true // 是否是公开项目。
    }
}




